<?xml version="1.0" encoding="UTF-8"?>
<WebXML>
    <document>
        <class name="NotificationHandler" fullname="gx::app::notifications::NotificationHandler" href="gx-app-notifications-notificationhandler.html" status="active" access="public" location="NotificationHandler.h" filepath="D:/projects/qt/libs/Genesis-X/core/src/app/notifications/NotificationHandler.h" lineno="18" since="6.10" documented="true" groups="genesisx-core" module="GenesisX" brief="Main class for local and push notifications">
            <description path="D:/projects/qt/libs/Genesis-X/core/src/app/notifications/NotificationHandler.cpp" line="23" column="4">
                <brief>Main class for local and push notifications.</brief>
                <para>code snippet shows the correct usage pattern:</para>
                <code>#include &lt;QGuiApplication&gt;
#include &lt;QQmlApplicationEngine&gt;
#include &lt;GenesisX/CoreQml.h&gt;

int main(int argc, char *argv[])
{
    QGuiApplication app(argc, argv);

    GXCore::registerEnabledQmlModules(&amp;engine);

    QQmlApplicationEngine engine;

    engine.load(QStringLiteral(&quot;qrc:/views/MasterView.qml&quot;));

    if (engine.rootObjects().isEmpty()) return -1;

    return app.exec();
}</code>
                <brief>Optional you can autoload only the used modules.</brief>
                <para>code snippet setting modules list in qmake:</para>
                <code>GX_LOADED_MODULES = $$QT
GX_LOADED_MODULES_CSV = $$join(GX_LOADED_MODULES, &quot;,&quot;)
DEFINES += GX_LOADED_MODULES=\\\&quot;$$GX_LOADED_MODULES_CSV\\\&quot;</code>
                <brief>And set in main.cpp.</brief>
                <code>GXCore::registerEnabledQmlModules(&amp;engine, GX_LOADED_MODULES);</code>
                <brief>And implementing it in qml.</brief>
                <para>code snippet shows the correct usage pattern:</para>
                <code>import QtQuick
import GenesisX.Notifications 1.0

Window {
    id: root
    visible: true
    width: 1024
    height: 768

    Component.onCompleted: {
        notify.show(&quot;Hello from GenesisX&quot;, &quot;Windows tray balloon :-)&quot;)
    }

    NotificationHandler {
        id: notify
        onNotificationReceived: (title, body, data) =&gt; {
            console.log(&quot;[QML] got notification:&quot;, title, body, JSON.stringify(data))
        }
        onTokenChanged: t =&gt; console.log(&quot;New token found in qml:&quot;, t)
        Component.onCompleted: initialize()
    }
}</code>
            </description>
        </class>
    </document>
</WebXML>
